<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.fluentretail</groupId>
    <artifactId>rubix-plugin-shoppersstop</artifactId>
    <version>1.0.44</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <rubix.artifact>${project.groupId}.${project.artifactId}</rubix.artifact>
        <rubix.artifact.vendor>Fluent Commerce</rubix.artifact.vendor>
        <!--suppress UnresolvedMavenProperty -->
        <rubix.osgi.symbolic.name>SSTOPDEV.base</rubix.osgi.symbolic.name>
        <rubix.osgi.import.package>
            com.apollographql.apollo.api.*,
            com.fasterxml.jackson.*,
            com.fluentretail.api.*,
            com.fluentretail.graphql.type.*,
            com.fluentretail.rubix.*,
            com.google.code.*,
            com.google.common.collect.*,
            feign.*,
            javax.net.*,
            org.osgi.service.event,
            org.slf4j.*
        </rubix.osgi.import.package>
        <rubix.osgi.activator/>
        <rubix.osgi.export.package/>
        <rubix.osgi.export.service/>
        <!-- PROVIDED VERSIONS -->
        <rubix-plugin-base.version>1.2020.6.2</rubix-plugin-base.version>
        <fluent-api-client.version>1.2020.6.2</fluent-api-client.version>
        <apollo.graphql.version>0.4.2</apollo.graphql.version>
        <common.collection.version>3.2.2</common.collection.version>
        <common.lang3.version>3.4</common.lang3.version>
        <commons.collections4.version>4.0</commons.collections4.version>
        <google.guava.version>19.0</google.guava.version>
        <google.maps.version>0.2.9</google.maps.version>
        <google.gson.version>2.8.5</google.gson.version>
        <javatuples.version>1.2</javatuples.version>
        <lombok.version>1.18.18</lombok.version>
        <slf4j.version>1.7.12</slf4j.version>
        <okhttp.version>3.14.4</okhttp.version>
        <okio.version>1.17.5</okio.version>
        <!-- TEST versions-->
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <powermock-api-mockito.versions>1.6.5</powermock-api-mockito.versions>

        <repoHost>repo.internal.parcelpoint.com.au</repoHost>
    </properties>

    <scm>
        <connection>scm:git:ssh://git@code.fluentretail.com:7999/es/rubix-plugin-commonv2.git</connection>
        <url>scm:git:ssh://git@code.fluentretail.com:7999/es/rubix-plugin-commonv2.git</url>
        <developerConnection>scm:git:ssh://git@code.fluentretail.com:7999/es/rubix-plugin-commonv2.git</developerConnection>
  </scm>

    <repositories>
        <repository>
            <id>maven-s3-release-repo</id>
            <name>AWS Release Repository</name>
            <url>http://mvnrepo.fluentretail.com.s3-website-ap-southeast-2.amazonaws.com/releases</url>
        </repository>
        <repository>
            <id>maven-s3-snapshot-repo</id>
            <name>AWS Snapshot Repository</name>
            <url>http://mvnrepo.fluentretail.com.s3-website-ap-southeast-2.amazonaws.com/snapshots</url>
        </repository>
        <repository>
			  <id>ApolloGraphQL</id>
			  <name>ApolloGraphQL</name>
			  <url>https://dl.bintray.com/apollographql/android/</url>
		</repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven-s3-release-repo</id>
            <name>AWS Release Repository</name>
            <url>http://mvnrepo.fluentretail.com.s3-website-ap-southeast-2.amazonaws.com/releases</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <snapshotRepository>
            <id>parcelpoint-snapshots</id>
            <name>parcelpoint-snapshots</name>
            <url>http://${repoHost}/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>parcelpoint-releases</id>
            <name>parcelpoint-releases</name>
            <url>http://${repoHost}/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <!-- PROVIDED DEPENDENCIES START -->
        <dependency>
            <groupId>com.fluentretail</groupId>
            <artifactId>rubix-plugin-sdk</artifactId>
            <version>${rubix-plugin-base.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fluentretail</groupId>
            <artifactId>fluent-api-client</artifactId>
            <version>${fluent-api-client.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.apollographql.apollo</groupId>
            <artifactId>apollo-api</artifactId>
            <version>${apollo.graphql.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- PROVIDED DEPENDENCIES END -->

        <!-- ADDITIONAL FRAMEWORKS START -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${common.lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${common.collection.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons.collections4.version}</version>
		</dependency>

        <dependency>
            <groupId>com.google.maps</groupId>
            <artifactId>google-maps-services</artifactId>
            <version>${google.maps.version}</version>
        </dependency>

        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>${javatuples.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${google.gson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>${okio.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

        <!-- TEST START -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fluentretail</groupId>
            <artifactId>rubix-test-mockery</artifactId>
            <version>${rubix-plugin-base.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock-api-mockito.versions}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <version>${powermock-api-mockito.versions}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock-api-mockito.versions}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.fluentretail</groupId>

                <artifactId>apollo-client-maven-plugin</artifactId>
                <version>${rubix-plugin-base.version}</version>
                <configuration>
                    <basePackage>com.fluentcommerce.commonv2.graphql</basePackage>
                    <introspectionFile>${project.basedir}/src/main/graphql/schema.json</introspectionFile>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-classes</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>replace-customtypes</id>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>1.16.8.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--  use 3.5 to work with 1.8 jdk -->
                <version>3.5.1</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.0.1</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>cleanVersions</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <instructions>
                        <Bundle-Name>${project.name}</Bundle-Name>
                        <Bundle-SymbolicName>${rubix.osgi.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${rubix.osgi.activator}</Bundle-Activator>
                        <Bundle-Vendor>${rubix.artifact.vendor}</Bundle-Vendor>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Export-Package>${rubix.osgi.export.package}</Export-Package>
                        <Export-Service>${rubix.osgi.export.service}</Export-Service>
                        <Import-Package>${rubix.osgi.import.package}</Import-Package>
                        <Embed-Dependency>*;scope=compile|runtime;inline=true</Embed-Dependency>
                        <Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
                        <Embed-Transitive>true</Embed-Transitive>
                        <Rubix-Rules>$(classes;CONCRETE;ANNOTATION;com.fluentretail.rubix.rule.meta.RuleInfo)</Rubix-Rules>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <check></check>
                    <formats>
                        <format>xml</format>
                        <format>html</format>
                    </formats>
                </configuration>
                <executions>
                    <execution>
                        <phase>clean</phase>
                        <goals>
                            <goal>cobertura</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
